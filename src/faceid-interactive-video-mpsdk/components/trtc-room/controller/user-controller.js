import Event from"../utils/event.js";import User from"../model/user.js";import Stream from"../model/stream.js";import{EVENT}from"../common/constants.js";const TAG_NAME="UserController";class UserController{constructor(e){this.userMap=new Map,this.userList=[],this.streamList=[],this._emitter=new Event,this.componentContext=e,this.isNewVersion=e.isNewVersion}userEventHandler(e){const s=e.detail.code;let t;if(!e.detail.message||"string"!=typeof e.detail.message)return console.warn(TAG_NAME,"userEventHandler 数据格式错误"),!1;try{t=JSON.parse(e.detail.message)}catch(e){return console.warn(TAG_NAME,"userEventHandler 数据格式错误",e),!1}switch(s){case 1020:this.isNewVersion;break;case 1031:this.addUser(t);break;case 1032:this.removeUser(t);break;case 1033:this.updateUserVideo(t);break;case 1034:this.updateUserAudio(t)}}addUser(e){const s=e.userlist,t=this.userMap;Array.isArray(s)&&s.length>0&&s.forEach(e=>{const s=e.userid;let r=this.getUser(s);r||(r=new User({userID:s}),this.userList.push({userID:s})),t.set(s,r),this._emitter.emit(EVENT.REMOTE_USER_JOIN,{userID:s,userList:this.userList})})}removeUser(e){const s=e.userlist;Array.isArray(s)&&s.length>0&&s.forEach(e=>{const s=e.userid;let t=this.getUser(s);this._removeUserAndStream(s),t.streams.main&&t.streams.main.reset(),t.streams.aux&&t.streams.aux.reset(),this._emitter.emit(EVENT.REMOTE_USER_LEAVE,{userID:s,userList:this.userList,streamList:this.streamList}),t=void 0,this.userMap.delete(s)})}updateUserVideo(e){console.log(TAG_NAME,"updateUserVideo",e);const s=e.userlist;Array.isArray(s)&&s.length>0&&s.forEach(e=>{const s=e.userid,t=e.streamtype,r=s+"_"+t,i=e.hasvideo,a=e.playurl,o=this.getUser(s);if(o){let e=o.streams[t];console.log(TAG_NAME,"updateUserVideo start",o,t,e),e?(e.setProperty({hasVideo:i}),i||e.hasAudio||this._removeStream(e)):(o.streams[t]=e=new Stream({userID:s,streamID:r,hasVideo:i,src:a,streamType:t}),this._addStream(e)),"aux"===t&&(i?(e.objectFit="contain",this._addStream(e)):this._removeStream(e)),this.userList.find(e=>{if(e.userID===s)return e[`has${t.replace(/^\S/,e=>e.toUpperCase())}Video`]=i,!0}),console.log(TAG_NAME,"updateUserVideo end",o,t,e);const m=i?EVENT.REMOTE_VIDEO_ADD:EVENT.REMOTE_VIDEO_REMOVE;this._emitter.emit(m,{stream:e,streamList:this.streamList,userList:this.userList})}})}updateUserAudio(e){const s=e.userlist;Array.isArray(s)&&s.length>0&&s.forEach(e=>{const s=e.userid,t=s+"_main",r=e.hasaudio,i=e.playurl,a=this.getUser(s);if(a){let e=a.streams.main;e?(e.setProperty({hasAudio:r}),r||e.hasVideo||this._removeStream(e)):(a.streams.main=e=new Stream({userID:s,streamID:t,hasAudio:r,src:i,streamType:"main"}),this._addStream(e)),this.userList.find(e=>{if(e.userID===s)return e[`has${"main".replace(/^\S/,e=>e.toUpperCase())}Audio`]=r,!0});const o=r?EVENT.REMOTE_AUDIO_ADD:EVENT.REMOTE_AUDIO_REMOVE;this._emitter.emit(o,{stream:e,streamList:this.streamList,userList:this.userList})}})}getUser(e){return this.userMap.get(e)}getStream({userID:e,streamType:s}){const t=this.userMap.get(e);if(t)return t.streams[s]}getUserList(){return this.userList}getStreamList(){return this.streamList}reset(){return this.streamList.forEach(e=>{e.reset()}),this.streamList=[],this.userList=[],this.userMap.clear(),{userList:this.userList,streamList:this.streamList}}on(e,s,t){this._emitter.on(e,s,t)}off(e,s){this._emitter.off(e,s)}_removeUserAndStream(e){this.streamList=this.streamList.filter(s=>s.userID!==e&&""!==s.userID),this.userList=this.userList.filter(s=>s.userID!==e)}_addStream(e){this.streamList.includes(e)||this.streamList.push(e)}_removeStream(e){this.streamList=this.streamList.filter(s=>s.userID!==e.userID||s.streamType!==e.streamType),this.getUser(e.userID).streams[e.streamType]=void 0}}export default UserController;